version: "3.8"
services:
    node:
        build: "./node"
        container_name: node
        hostname: node
        ports:
            - "8080:8080"
        restart: unless-stopped
        environment:
            - NODE_ENV=production
        depends_on:
            couchdb:
                condition: service_healthy
        links:
            - couchdb
        networks:
            - frontend
            - backend
        env_file:
            - ./.env
        volumes:
            - ./node/public:/usr/src/app/public
            - ./node/config:/usr/src/app/config
            - ./node/models:/usr/src/app/models
            - ./node/routes:/usr/src/app/routes
            - ./node/views:/usr/src/app/views
            - ./node/server.js:/usr/src/app/server.js
    mail:
        build: "./mail"
        container_name: mail
        hostname: mail
        ports:
            - "465:465"
        restart: unless-stopped
        environment:
            - NODE_ENV=production
        depends_on:
            - node
        links:
            - node
        networks:
            - backend
        env_file:
            - ./.env
        volumes:
            - ./mail/server.js:/usr/src/app/server.js
    ws:
        build: "./ws"
        container_name: ws
        hostname: ws
        ports:
            - '1337:1337'
        restart: unless-stopped
        environment:
            - NODE_ENV=production
        depends_on:
            - node
        links:
            - node
        networks:
            - backend
        env_file:
            - ./.env
        volumes:
            - ./ws/server.js:/usr/src/app/server.js
    nginx:
        build: "./nginx"
        container_name: nginx
        hostname: nginx
        ports:
            - "80:80"
            - "443:443"
            - "4984:4984"
        restart: unless-stopped
        depends_on:
            - node
        networks:
            - frontend
            - backend
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./nginx/ssl:/etc/nginx/ssl
    couchdb:
        image: couchdb
        restart: always
        container_name: couchdb
        hostname: couchdb
        environment:
            - COUCHDB_USER=${COUCHDB_USER}
            - COUCHDB_PASSWORD=${COUCHDB_PASSWORD}
        ports:
            - "5984:5984" # Management su http://localhost:5984/_utils/
        networks:
            - backend
        volumes:
            - ./couchdb:/opt/couchdb/data
        healthcheck:
            test: [ "CMD-SHELL", "curl -f http://localhost:5984/" ]
            interval: 5s
            timeout: 5s
            retries: 5
            start_period: 40s
networks:
    frontend:
    backend:
